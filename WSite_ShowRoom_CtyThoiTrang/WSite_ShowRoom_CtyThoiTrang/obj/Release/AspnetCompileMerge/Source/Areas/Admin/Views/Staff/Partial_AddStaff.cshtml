@model WSite_ShowRoom_CtyThoiTrang.Models.Admin_Add_Staff_ToKen


@using (Ajax.BeginForm("Add", "Staff", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"
}, new { @Id = "myForm" }))
{


    <script>

        function validateForm() {
            var sdt = document.getElementById('Name').value.trim();
            var tenKhachHang = document.getElementById('SDT').value.trim();
            var email = document.getElementById('CCCD').value.trim();
            var password = document.getElementById('Email').value.trim();
            var diaChi = document.getElementById('demoPrice').value.trim();
            var confirmPassword = document.getElementById('DiaChi').value.trim();


            if (!sdt || !tenKhachHang || !email || !password || !diaChi || !confirmPassword) {

                Swal.fire({
                    icon: "error",
                    title: "Lỗi tìm...",
                    text: "Vui lòng điền đầy đủ thông tin.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;

            }


            if (password !== confirmPassword) {

                Swal.fire({
                    icon: "warning",
                    title: "Lỗi tìm...",
                    text: "Mật khẩu và xác nhận mật khẩu không khớp.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;
                return false;
            }



            return true;
        }


        function OnBeginCO() {
            $('#btnRegister').attr("disabled", "disabled");
        }
       

        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code == 1) {

                    location.reload(true);
                    const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });

                    Toast.fire({
                        icon: "success",
                        title: "Thêm nhân viên thành công"
                    });

                } else {
                }
            }
            else {
                if (res.Code == -2) {
                    Swal.fire({
                        icon: "error",
                        title: "Lỗi thêm nhân viên...",
                        text: "Email đã tồn tại",
                        /*footer: '<a href="#">Why do I have this issue?</a>'*/
                    });

                }
                if (res.Code == -3) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lỗi thêm nhân viên...",
                        text: "Số điện thoại đã tồn tại ",
                        /*footer: '<a href="#">Why do I have this issue?</a>'*/
                    });
                }
                if (res.Code == -4) {
                    Swal.fire({
                        icon: "question",
                        title: "Lỗi thêm nhân viên...",
                        text: "Không thấy chức năng cho nhân viên mới ",
                        /*footer: '<a href="#">Why do I have this issue?</a>'*/
                    });

                }
                if (res.Code == -5) {
                    Swal.fire({
                        icon: "info",
                        title: "Lỗi tìm...",
                        text: "Mã hàng được trả về ",
                        /*footer: '<a href="#">Why do I have this issue?</a>'*/
                    });
                }
                if (res.Code == -6) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lỗi tìm...",
                        text: "Đơn hàng lập lại 2 lần ",
                        /*footer: '<a href="#">Why do I have this issue?</a>'*/
                    });
                }
            }

        }







    </script>


    @Html.AntiForgeryToken()
    <div class="container">


        <div class="row">
            <div class="col-lg-12">
                <div class="job-detail mt-2 p-4">


                    <div class="custom-form">
                        <form>
                            <div class="row">
                                <div class="col-md-12">

                                    <div class="form-group app-label">
                                        <label for="frist-name" class="text-muted">Họ Tên</label>

                                        @*@Html.EditorFor(model => model.Name, id = "Code", new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập tên nhân viên" } })*@
                                        <input type="text" name="Name" id="Name" required class="form-control" autocomplete="off" placeholder="Nhập tên nhân viên " />
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group app-label">
                                        <label for="middle-name" class="text-muted">Số điện thoại</label>
                                        <div class="form-group">
                                      
                                            <input type="text" name="SDT" id="SDT" required class="form-control" autocomplete="off" placeholder="Số điện thoại" />
                                            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group app-label">
                                        <label for="surname-name" class="text-muted">Căn cước công dân</label>
                                        <div class="form-group">
                                           
                                            <input type="text" name="CCCD" id="CCCD" required class="form-control" autocomplete="off" placeholder="Căn cước công dân" />
                                            @Html.ValidationMessageFor(model => model.CCCD, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group app-label">
                                        <label for="date-of-birth" class="text-muted">Ngày sinh</label>
                           
                                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", @placeholder = "13-02-1999" } })
                                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="col-md-4">
                                    <div class="form-group app-label">
                                        <label for="date-of-birth" class="text-muted">Email</label>
                                        <div class="form-group">
                                            <input type="email" name="Email" id="Email" required class="form-control" autocomplete="off" placeholder="Email" />
                                            @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })*@
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    <div class="form-group app-label">
                                        <label for="General" class="text-muted">Chức vụ</label>
                                        @*@Html.Action("Partival_IdChucNang", "Staff")*@

                                        @*@Html.ValidationMessageFor(x => x.ProductCategoryId, null, new { @class = "text-danger" })*@
                                        @Html.DropDownListFor(x => x.IdChucNang, ViewBag.ChucNang as SelectList, "-Chọn danh mục chức năng-", new { @class = "form-control", @placeholder = "Chức Năng Nhân Viên" })
                                        @Html.ValidationMessageFor(x => x.IdChucNang, null, new { @class = "text-danger" })



                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group app-label">
                                        <div class="col-lg-12">
                                            <div class="form-group app-label">
                                                <label for="General" class="text-muted">Lương</label>

                                                <input type="text" name="demoPrice" value="0" id="demoPrice" class="form-control auto" data-a-dec="," data-a-sep=".">

                                                @Html.HiddenFor(model => model.Luong, new { @class = "form-control", @placeholder = "Lương" })
                                                @Html.ValidationMessageFor(model => model.Luong, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-10">
                                    <div class="form-group app-label">
                                        <div class="col-lg-12">
                                            <div class="form-group app-label">

                                                <label for="General" class="text-muted">Địa Chỉ</label>
                                                <input type="text" name="DiaChi" id="DiaChi" required class="form-control" autocomplete="off" placeholder="Địa Chỉ" />
                                                @*@Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })


                                                @*<textarea id="address" rows="4" class="form-control resume" placeholder=""></textarea>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-2">
                                    <div class="form-group app-label">
                                        <div class="col-lg-12">
                                            <div class="form-group app-label">

                                                <label for="General" class="text-muted">Giới tính</label>

                                                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })

                                                @*<textarea id="address" rows="4" class="form-control resume" placeholder=""></textarea>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>







        <div class="row">
            <div class="col-1"></div>

            <div class="col-10 d-grid gap-2 col-10 mx-auto"><button type="submit" class="btn btn-success btnRegister  ">Đăng ký nhân viên mới</button></div>

            <div class="col-1"></div>
        </div>
    </div>
}


